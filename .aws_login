# AWS stuff
if [ -n "${ZSH_VERSION}" ]; then
    typeset -A amz_roles
    # this should go into a private profile:
    # amz_roles=(
    #     short long
    #     ...
    # )
    amz_roles[user]=
else
    declare -A amz_roles
    # this should go into a private profile:
    # declare -A amz_roles=(
    #     ["short"]="long"
    #     ...
    # )
    amz_roles["user"]=
fi
amz_roles_default="${amz_roles_default:-user}"

amz() {(
    set -e
    set +x

    args="${@}"
    token=
    role=
    arn="$(
        aws sts get-caller-identity --profile user --output text --query 'Arn'
    )"
    user="${arn##*/}"

    if echo "${1}" | grep -q '^[0-9][0-9][0-9][0-9][0-9][0-9]$'; then
        token="${1}"
        shift
    fi

    if [ -n "${1}" ]; then
        role="${1}"
        shift
    else
        role="${amz_roles_default}"
    fi

    if [ -z "${token}" ]; then
        if echo "${1}" | grep -q '^[0-9][0-9][0-9][0-9][0-9][0-9]$'; then
            token="${1}"
            shift
        fi
    fi

    if [ -n "${role}" ]; then
        if [ -n "${ZSH_VERSION}" ]; then
            if (( $+amz_roles[$role] )); then
                role="${amz_roles[$role]}"
            fi
        elif [ -n "${amz_roles["${role}"]+_}" ]; then
            role="${amz_roles["${role}"]}"
        fi
    fi

    if [ -n "${role}" ]; then
        cmd=( aws sts assume-role --role-arn "${role}"
              --role-session-name "awscli-$(whoami)-$(hostname -f)"
              --profile user )
    else
        cmd=( aws sts get-session-token --profile user )
    fi

    if [ -n "${token}" ]; then
        cmd=( "${cmd[@]}" --serial-number "${arn/:user\//:mfa/}"
              --token-code "${token}" )
    fi

    cmd=( "${cmd[@]}"  --output text
         --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' )

    set -o pipefail
    set +e

    tmpfile="$(mktemp)"
    "${cmd[@]}" 2>"${tmpfile}" | (
        read key secret session
        aws configure set default.aws_access_key_id "${key}"
        aws configure set default.aws_secret_access_key "${secret}"
        aws configure set default.aws_session_token "${session}"
    )

    if [ $? -ne 0 -a -z "${token}" ] && \
            grep -q 'AccessDenied' -- "${tmpfile}"; then
        rm -f -- "${tmpfile}"
        echo -n "MFA: "
        read token
        args=( "${token}" "${args[@]}" )
        amz "${args[@]}"
        return $?
    fi

    cat <"${tmpfile}" >&2
    rm -f -- "${tmpfile}"
    user="$(aws sts get-caller-identity --query 'Arn' --output text)"
    if [ $? -eq 0 ]; then
        echo "Your are now: ${user}"
    fi
)}
